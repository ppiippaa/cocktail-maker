{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\src\\\\pages\\\\Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { DrinksContext } from \"../state/DrinksContext\";\nimport axios from \"axios\";\nimport transformDrinkData from \"../utils/adaptors/getDrinks\";\nimport ButtonRandomCocktail from \"../components/ButtonRandomCocktail\";\nimport SearchIngredient from \"../components/SearchIngredient\";\nimport SearchName from \"../components/SearchName\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport DisplayCocktail from \"../components/DisplayCocktail\";\nimport { StyledCocktailGrid } from \"../components/styles/CocktailGrid.styled\";\nimport '../components/Homepage.css';\nimport { StyledSearchForm } from \"../components/styles/SearchForm.styled\";\nimport homepageImage from '../media/homepageImage.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Homepage = () => {\n  _s();\n\n  // STATE FOR COCKTAIL\n  const {\n    drinks,\n    setDrinks\n  } = useContext(DrinksContext); // STATE FOR COCKTAIL INGREDIENT SEARCH\n\n  const [searchIngredient, setSearchIngredient] = useState(''); // STATE FOR COCKTAIL NAME SEARCH\n\n  const [searchName, setSearchName] = useState(''); // ERROR IN FETCH STATE\n\n  const [fetchError, setFetchError] = useState(null);\n\n  const randomCocktailHandler = async () => {\n    const {\n      data\n    } = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n    setDrinks([transformDrinkData(data['drinks'][0])]);\n  }; // SEARCH BY INGREDIENTS\n\n\n  const handleIngredientChange = e => {\n    setSearchIngredient(e.target.value);\n  };\n\n  const searchIngredients = e => {\n    e.preventDefault();\n    const ingredient = searchIngredient;\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\n    axios.get(`${url}${ingredient}`).then(response => {\n      const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink));\n      setDrinks(allDrinks);\n      setFetchError(false);\n    }).catch(error => {\n      console.log(`Sorry, no cocktails containing ${ingredient} were found`);\n      setFetchError(true);\n    });\n  }; // SEARCH BY COCKTAIL NAME\n\n\n  const handleNameChange = e => {\n    setSearchName(e.target.value);\n  };\n\n  const searchCocktailName = e => {\n    e.preventDefault();\n    const name = searchName;\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    axios.get(`${url}${name}`).then(response => {\n      const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink));\n      setDrinks(allDrinks);\n      setFetchError(false);\n    }).catch(error => {\n      console.log(`Sorry, we couldn't find ${searchName}`);\n      setFetchError(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(StyledSearchForm, {\n          children: /*#__PURE__*/_jsxDEV(SearchIngredient, {\n            ingredientChange: handleIngredientChange,\n            submitIngredientSearch: searchIngredients\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledSearchForm, {\n          children: /*#__PURE__*/_jsxDEV(SearchName, {\n            nameChange: handleNameChange,\n            submitNameSearch: searchCocktailName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonRandomCocktail, {\n          randomCocktail: randomCocktailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-pic\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: homepageImage,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), fetchError && /*#__PURE__*/_jsxDEV(ErrorMsg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }, this), drinks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"renderedCocktails\",\n      children: /*#__PURE__*/_jsxDEV(StyledCocktailGrid, {\n        children: drinks.map(drink => /*#__PURE__*/_jsxDEV(DisplayCocktail, {\n          drink: drink,\n          searchCocktailName: searchCocktailName\n        }, drink.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Homepage, \"mZU1awWi5rAo7Aoiq+UipISP66E=\");\n\n_c = Homepage;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/pages/Homepage.js"],"names":["React","useContext","useState","DrinksContext","axios","transformDrinkData","ButtonRandomCocktail","SearchIngredient","SearchName","ErrorMsg","DisplayCocktail","StyledCocktailGrid","StyledSearchForm","homepageImage","Homepage","drinks","setDrinks","searchIngredient","setSearchIngredient","searchName","setSearchName","fetchError","setFetchError","randomCocktailHandler","data","get","handleIngredientChange","e","target","value","searchIngredients","preventDefault","ingredient","url","then","response","allDrinks","map","drink","catch","error","console","log","handleNameChange","searchCocktailName","name","length","id"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {DrinksContext} from \"../state/DrinksContext\";\r\nimport axios from \"axios\";\r\nimport transformDrinkData from \"../utils/adaptors/getDrinks\";\r\nimport ButtonRandomCocktail from \"../components/ButtonRandomCocktail\";\r\nimport SearchIngredient from \"../components/SearchIngredient\";\r\nimport SearchName from \"../components/SearchName\";\r\nimport ErrorMsg from \"./ErrorMsg\";\r\nimport DisplayCocktail from \"../components/DisplayCocktail\";\r\nimport {StyledCocktailGrid} from \"../components/styles/CocktailGrid.styled\";\r\nimport '../components/Homepage.css';\r\nimport {StyledSearchForm} from \"../components/styles/SearchForm.styled\";\r\nimport homepageImage from '../media/homepageImage.jpg'\r\n\r\n\r\nconst Homepage = () => {\r\n    // STATE FOR COCKTAIL\r\n    const {drinks, setDrinks} = useContext(DrinksContext)\r\n    // STATE FOR COCKTAIL INGREDIENT SEARCH\r\n    const [searchIngredient, setSearchIngredient] = useState('')\r\n    // STATE FOR COCKTAIL NAME SEARCH\r\n    const [searchName, setSearchName] = useState('')\r\n    // ERROR IN FETCH STATE\r\n    const [fetchError, setFetchError] = useState(null)\r\n\r\n\r\n    const randomCocktailHandler = async () => {\r\n        const {data} = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php')\r\n        setDrinks([transformDrinkData(data['drinks'][0])])\r\n    }\r\n\r\n\r\n    // SEARCH BY INGREDIENTS\r\n    const handleIngredientChange = (e) => {\r\n        setSearchIngredient(e.target.value)\r\n    }\r\n\r\n\r\n    const searchIngredients = (e) => {\r\n        e.preventDefault()\r\n        const ingredient = searchIngredient;\r\n        const url = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i='\r\n\r\n\r\n        axios\r\n            .get(`${url}${ingredient}`)\r\n            .then(response => {\r\n                const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\r\n                setDrinks(allDrinks)\r\n                setFetchError(false)\r\n            }).catch(error => {\r\n            console.log(`Sorry, no cocktails containing ${ingredient} were found`)\r\n            setFetchError(true)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    // SEARCH BY COCKTAIL NAME\r\n    const handleNameChange = (e) => {\r\n        setSearchName(e.target.value)\r\n    }\r\n\r\n    const searchCocktailName = (e) => {\r\n        e.preventDefault()\r\n        const name = searchName\r\n        const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\r\n\r\n        axios\r\n            .get(`${url}${name}`)\r\n            .then(response => {\r\n                const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\r\n                setDrinks(allDrinks)\r\n                setFetchError(false)\r\n            }).catch(error => {\r\n            console.log(`Sorry, we couldn't find ${searchName}`)\r\n            setFetchError(true)\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='flex-row'>\r\n                <div className=\"controls\">\r\n                    <StyledSearchForm>\r\n                        <SearchIngredient ingredientChange={handleIngredientChange} submitIngredientSearch={searchIngredients}/>\r\n                    </StyledSearchForm>\r\n                    <StyledSearchForm>\r\n                        <SearchName nameChange={handleNameChange} submitNameSearch={searchCocktailName}/>\r\n                    </StyledSearchForm>\r\n                    <ButtonRandomCocktail randomCocktail={randomCocktailHandler}/>\r\n                </div>\r\n                <div className='logo-pic'>\r\n                    <img src={homepageImage} alt=\"logo\"/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n                {\r\n                    fetchError && (\r\n                        <ErrorMsg/>\r\n                    )\r\n                }\r\n                {\r\n                    drinks.length > 0 && (\r\n                        <div className='renderedCocktails'>\r\n                        <StyledCocktailGrid>\r\n                            {\r\n                                drinks.map(drink =>\r\n                                    <DisplayCocktail\r\n                                        drink={drink}\r\n                                        key={drink.id}\r\n                                        searchCocktailName={searchCocktailName}\r\n                                    />)\r\n                            }\r\n                        </StyledCocktailGrid>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}
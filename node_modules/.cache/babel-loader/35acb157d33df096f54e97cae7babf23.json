{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\src\\\\components\\\\DisplayCocktail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Favourite from '../media/isFavouriteHeart.png';\nimport NotFavourite from '../media/isNotFavouriteHeart.png';\nimport { DrinksContext } from \"../state/DrinksContext\";\nimport axios from \"axios\";\nimport transformDrinkData from \"../utils/adaptors/getDrinks\";\nimport { addToLocalStorage, getFromLocalStorage } from \"../utils/helpers/localStorage\";\nimport { FavouriteDrinksContext } from \"../state/FavouriteDrinksContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayCocktail = props => {\n  _s();\n\n  const drink = props.drink;\n  const {\n    name,\n    url,\n    method,\n    ingredients\n  } = drink;\n  const {\n    favourites,\n    setFavourites\n  } = useContext(FavouriteDrinksContext);\n  const [ingredientsToDisplay, setIngredientsToDisplay] = useState(ingredients);\n  const [methodToDisplay, setMethodToDisplay] = useState(method);\n  useEffect(() => {\n    const fetchExtraData = async () => {\n      const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      axios.get(`${url}${name}`).then(response => {\n        console.log(response.data);\n        const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink));\n        setIngredientsToDisplay(allDrinks[0].ingredients);\n        setMethodToDisplay(allDrinks[0].method);\n      }).catch(error => {\n        console.log(`Sorry, we couldn't find ${name}`);\n      });\n    };\n\n    if (!methodToDisplay && !ingredientsToDisplay.length) {\n      fetchExtraData();\n    }\n  }, []);\n\n  const toggleFavourite = remove => {\n    if (remove) {\n      const filteredDrinks = favourites.filter(drink => drink.name !== name);\n      setFavourites(filteredDrinks);\n      addToLocalStorage(filteredDrinks);\n    } else {\n      setFavourites([...favourites, drink]);\n      addToLocalStorage([...favourites, drink]);\n    }\n  };\n\n  const isFavouriteDrink = () => {\n    var _getFromLocalStorage;\n\n    return favourites.find(f => f.name === name) || ((_getFromLocalStorage = getFromLocalStorage()) === null || _getFromLocalStorage === void 0 ? void 0 : _getFromLocalStorage.find(f => f.name === name));\n  };\n\n  console.log(isFavouriteDrink());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${url}/preview`,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingredientsToDisplay.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient\n      }, ingredient, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 68\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: methodToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: isFavouriteDrink() ? Favourite : NotFavourite,\n      alt: isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to FavouriteDrinks',\n      height: \"50px\",\n      onClick: () => toggleFavourite(isFavouriteDrink())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DisplayCocktail, \"z+iGb0zN3H9hBp2Zfjovc3BlyEg=\");\n\n_c = DisplayCocktail;\nexport default DisplayCocktail;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayCocktail\");","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/components/DisplayCocktail.js"],"names":["React","useContext","useState","useEffect","Favourite","NotFavourite","DrinksContext","axios","transformDrinkData","addToLocalStorage","getFromLocalStorage","FavouriteDrinksContext","DisplayCocktail","props","drink","name","url","method","ingredients","favourites","setFavourites","ingredientsToDisplay","setIngredientsToDisplay","methodToDisplay","setMethodToDisplay","fetchExtraData","get","then","response","console","log","data","allDrinks","map","catch","error","length","toggleFavourite","remove","filteredDrinks","filter","isFavouriteDrink","find","f","ingredient"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,SAAQC,iBAAR,EAA2BC,mBAA3B,QAAqD,+BAArD;AACA,SAAQC,sBAAR,QAAqC,iCAArC;;;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,MAAqCJ,KAA3C;AAEA,QAAM;AAACK,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA8BnB,UAAU,CAACU,sBAAD,CAA9C;AAEA,QAAM,CAACU,oBAAD,EAAuBC,uBAAvB,IAAkDpB,QAAQ,CAACgB,WAAD,CAAhE;AAEA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAACe,MAAD,CAAtD;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,cAAc,GAAG,YAAY;AAC/B,YAAMT,GAAG,GAAG,2DAAZ;AAEAT,MAAAA,KAAK,CACAmB,GADL,CACU,GAAEV,GAAI,GAAED,IAAK,EADvB,EAEKY,IAFL,CAEUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,cAAMC,SAAS,GAAGJ,QAAQ,CAACG,IAAT,CAAc,QAAd,EAAwBE,GAAxB,CAA4BnB,KAAK,IAAIN,kBAAkB,CAACM,KAAD,CAAvD,CAAlB;AACAQ,QAAAA,uBAAuB,CAACU,SAAS,CAAC,CAAD,CAAT,CAAad,WAAd,CAAvB;AACAM,QAAAA,kBAAkB,CAACQ,SAAS,CAAC,CAAD,CAAT,CAAaf,MAAd,CAAlB;AACH,OAPL,EAOOiB,KAPP,CAOaC,KAAK,IAAI;AAClBN,QAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0Bf,IAAK,EAA5C;AACH,OATD;AAUH,KAbD;;AAcA,QAAI,CAACQ,eAAD,IAAoB,CAACF,oBAAoB,CAACe,MAA9C,EAAsD;AACnDX,MAAAA,cAAc;AAChB;AACJ,GAlBQ,EAkBN,EAlBM,CAAT;;AAsBA,QAAMY,eAAe,GAAIC,MAAD,IAAY;AAChC,QAAIA,MAAJ,EAAY;AACR,YAAMC,cAAc,GAAGpB,UAAU,CAACqB,MAAX,CAAkB1B,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAeA,IAA1C,CAAvB;AACAK,MAAAA,aAAa,CAACmB,cAAD,CAAb;AACA9B,MAAAA,iBAAiB,CAAC8B,cAAD,CAAjB;AACH,KAJD,MAIO;AACJnB,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBL,KAAhB,CAAD,CAAb;AACCL,MAAAA,iBAAiB,CAAC,CAAC,GAAGU,UAAJ,EAAgBL,KAAhB,CAAD,CAAjB;AACH;AACJ,GATD;;AAWA,QAAM2B,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,WAAOtB,UAAU,CAACuB,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAAC5B,IAAF,KAAWA,IAAhC,8BAAyCL,mBAAmB,EAA5D,yDAAyC,qBAAuBgC,IAAvB,CAA4BC,CAAC,IAAIA,CAAC,CAAC5B,IAAF,KAAWA,IAA5C,CAAzC,CAAP;AACH,GAFD;;AAIAc,EAAAA,OAAO,CAACC,GAAR,CAAYW,gBAAgB,EAA5B;AACQ,sBACI;AAAA,4BACI;AAAA,gBAAK1B;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAG,GAAEC,GAAI,UAAjB;AAA4B,MAAA,GAAG,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAEQM,oBAAoB,CAACY,GAArB,CAAyBW,UAAU,iBAAI;AAAA,kBAAsBA;AAAtB,SAASA,UAAT;AAAA;AAAA;AAAA;AAAA,cAAvC;AAFR;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI;AAAA,gBAAIrB;AAAJ;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAK,MAAA,GAAG,EAAEkB,gBAAgB,KAAKrC,SAAL,GAAiBC,YAA3C;AAAyD,MAAA,GAAG,EAAEoC,gBAAgB,GAAG,uBAAH,GAA6B,6BAA3G;AACK,MAAA,MAAM,EAAC,MADZ;AACmB,MAAA,OAAO,EAAE,MAAMJ,eAAe,CAACI,gBAAgB,EAAjB;AADjD;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAcP,CA9DL;;GAAM7B,e;;KAAAA,e;AAiEN,eAAeA,eAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Favourite from '../media/isFavouriteHeart.png'\nimport NotFavourite from '../media/isNotFavouriteHeart.png'\nimport {DrinksContext} from \"../state/DrinksContext\"\nimport axios from \"axios\";\nimport transformDrinkData from \"../utils/adaptors/getDrinks\";\nimport {addToLocalStorage, getFromLocalStorage} from \"../utils/helpers/localStorage\";\nimport {FavouriteDrinksContext} from \"../state/FavouriteDrinksContext\";\n\n\nconst DisplayCocktail = (props) => {\n    const drink = props.drink\n    const { name, url, method, ingredients } = drink\n\n    const {favourites, setFavourites} = useContext(FavouriteDrinksContext)\n\n    const [ingredientsToDisplay, setIngredientsToDisplay] = useState(ingredients)\n\n    const [methodToDisplay, setMethodToDisplay] = useState(method)\n\n    useEffect(() => {\n        const fetchExtraData = async () => {\n            const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\n\n            axios\n                .get(`${url}${name}`)\n                .then(response => {\n                    console.log(response.data)\n                    const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\n                    setIngredientsToDisplay(allDrinks[0].ingredients)\n                    setMethodToDisplay(allDrinks[0].method)\n                }).catch(error => {\n                console.log(`Sorry, we couldn't find ${name}`)\n            })\n        }\n        if (!methodToDisplay && !ingredientsToDisplay.length) {\n           fetchExtraData()\n        }\n    }, [])\n\n\n\n    const toggleFavourite = (remove) => {\n        if (remove) {\n            const filteredDrinks = favourites.filter(drink => drink.name !== name)\n            setFavourites(filteredDrinks)\n            addToLocalStorage(filteredDrinks)\n        } else {\n           setFavourites([...favourites, drink])\n            addToLocalStorage([...favourites, drink])\n        }\n    }\n\n    const isFavouriteDrink = () => {\n        return favourites.find(f => f.name === name) || getFromLocalStorage()?.find(f => f.name === name)\n    }\n\n    console.log(isFavouriteDrink())\n            return (\n                <>\n                    <h3>{name}</h3>\n                    <img src={`${url}/preview`} alt={name}/>\n                    <ul>\n                        {\n                            ingredientsToDisplay.map(ingredient => <li key={ingredient}>{ingredient}</li>)\n                        }\n                    </ul>\n                    <p>{methodToDisplay}</p>\n                    <img src={isFavouriteDrink() ? Favourite : NotFavourite} alt={isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to FavouriteDrinks'}\n                         height='50px' onClick={() => toggleFavourite(isFavouriteDrink())}/>\n                </>\n            )\n    }\n\n\nexport default DisplayCocktail;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\src\\\\components\\\\DisplayCocktail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Favourite from '../media/isFavouriteHeart.png';\nimport NotFavourite from '../media/isNotFavouriteHeart.png';\nimport { DrinksContext } from \"../state/DrinksContext\";\nimport axios from \"axios\";\nimport transformDrinkData from \"../adaptors/getDrinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayCocktail = _ref => {\n  _s();\n\n  let {\n    drink: {\n      name,\n      url,\n      method,\n      ingredients,\n      isFavouriteDrink\n    }\n  } = _ref;\n  const {\n    drinks,\n    setDrinks\n  } = useContext(DrinksContext);\n  const [ingredientsToDisplay, setIngredientsToDisplay] = useState(ingredients);\n  const [methodToDisplay, setMethodToDisplay] = useState(method);\n  useEffect(async () => {\n    const fetchExtraData = async () => {\n      const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n      axios.get(`${url}${name}`).then(response => {\n        console.log(response.data);\n        const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink));\n        return allDrinks;\n      }).catch(error => {\n        console.log(`Sorry, we couldn't find ${name}`);\n      });\n    };\n\n    if (!methodToDisplay && !ingredientsToDisplay.length) {\n      const drinks = await fetchExtraData();\n      setIngredientsToDisplay(drinks[0].ingredients);\n      setMethodToDisplay(drinks[0].method);\n    }\n  }, []);\n\n  const toggleFavourite = () => {\n    const newDrinks = drinks.map(drink => {\n      if (drink.name === name) {\n        return { ...drink,\n          isFavouriteDrink: !isFavouriteDrink\n        };\n      }\n\n      return drink;\n    });\n    setDrinks(newDrinks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${url}/preview`,\n      alt: \"Image of Cocktail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ingredientsToDisplay.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: ingredient\n      }, ingredient, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 68\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: methodToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: isFavouriteDrink ? Favourite : NotFavourite,\n      alt: isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to Favourites',\n      height: \"50px\",\n      onClick: toggleFavourite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DisplayCocktail, \"99luZmISzMkEWVgRouYNbLMZdlk=\");\n\n_c = DisplayCocktail;\nexport default DisplayCocktail;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayCocktail\");","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/components/DisplayCocktail.js"],"names":["React","useContext","useState","useEffect","Favourite","NotFavourite","DrinksContext","axios","transformDrinkData","DisplayCocktail","drink","name","url","method","ingredients","isFavouriteDrink","drinks","setDrinks","ingredientsToDisplay","setIngredientsToDisplay","methodToDisplay","setMethodToDisplay","fetchExtraData","get","then","response","console","log","data","allDrinks","map","catch","error","length","toggleFavourite","newDrinks","ingredient"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Favourite from '../media/isFavouriteHeart.png'\nimport NotFavourite from '../media/isNotFavouriteHeart.png'\nimport {DrinksContext} from \"../state/DrinksContext\"\nimport axios from \"axios\";\nimport transformDrinkData from \"../adaptors/getDrinks\";\n\n\n\nconst DisplayCocktail = ({drink: {name, url, method, ingredients, isFavouriteDrink}}) => {\n\n    const {drinks, setDrinks} = useContext(DrinksContext)\n\n    const [ingredientsToDisplay, setIngredientsToDisplay] = useState(ingredients)\n\n    const [methodToDisplay, setMethodToDisplay] = useState(method)\n\n    useEffect(async () => {\n        const fetchExtraData = async () => {\n            const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\n\n            axios\n                .get(`${url}${name}`)\n                .then(response => {\n                    console.log(response.data)\n                    const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\n                    return allDrinks\n                }).catch(error => {\n                console.log(`Sorry, we couldn't find ${name}`)\n            })\n        }\n        if (!methodToDisplay && !ingredientsToDisplay.length) {\n            const drinks = await fetchExtraData()\n            setIngredientsToDisplay(drinks[0].ingredients)\n            setMethodToDisplay(drinks[0].method)\n        }\n    }, [])\n\n    const toggleFavourite = () => {\n        const newDrinks = drinks.map(drink => {\n            if (drink.name === name) {\n                return {...drink, isFavouriteDrink: !isFavouriteDrink}\n            }\n            return drink\n        } )\n        setDrinks(newDrinks)\n    }\n\n\n            return (\n                <>\n                    <h3>{name}</h3>\n                    <img src={`${url}/preview`} alt=\"Image of Cocktail\"/>\n                    <ul>\n                        {\n                            ingredientsToDisplay.map(ingredient => <li key={ingredient}>{ingredient}</li>)\n                        }\n                    </ul>\n                    <p>{methodToDisplay}</p>\n                    <img src={isFavouriteDrink ? Favourite : NotFavourite} alt={isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to Favourites'} height='50px' onClick={toggleFavourite}/>\n                </>\n            )\n    }\n\n\nexport default DisplayCocktail;"]},"metadata":{},"sourceType":"module"}
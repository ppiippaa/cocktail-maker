{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from 'axios';\nimport React, { useEffect, useState, useContext } from 'react';\nimport DisplayCocktail from \"./components/DisplayCocktail\";\nimport ButtonRandomCocktail from \"./components/ButtonRandomCocktail\";\nimport SearchIngredient from \"./components/SearchIngredient\";\nimport SearchName from \"./components/SearchName\";\nimport transformDrinkData from \"./adaptors/getDrinks\";\nimport { DrinksContext } from \"./state/DrinksContext\";\nimport Layout from \"./components/Layout\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport ErrorMsg from \"./components/ErrorMsg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // STATE FOR COCKTAIL\n  const {\n    drinks,\n    setDrinks\n  } = useContext(DrinksContext); // STATE FOR COCKTAIL INGREDIENT SEARCH\n\n  const [searchIngredient, setSearchIngredient] = useState(''); // STATE FOR COCKTAIL NAME SEARCH\n\n  const [searchName, setSearchName] = useState(''); // ERROR IN FETCH STATE\n\n  const [fetchError, setFetchError] = useState(null);\n\n  const randomCocktailHandler = async () => {\n    const {\n      data\n    } = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n    setDrinks([transformDrinkData(data['drinks'][0])]);\n  }; // SEARCH BY INGREDIENTS\n\n\n  const handleIngredientChange = e => {\n    setSearchIngredient(e.target.value);\n  };\n\n  const searchIngredients = e => {\n    e.preventDefault();\n    const ingredient = searchIngredient;\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\n    axios.get(`${url}${ingredient}`).then(response => {\n      const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink));\n      setDrinks(allDrinks);\n      setFetchError(false);\n    }).catch(error => {\n      console.log(`Sorry, no cocktails containing ${ingredient} were found`);\n      setFetchError(true);\n    });\n  }; // SEARCH BY COCKTAIL NAME\n\n\n  const handleNameChange = e => {\n    setSearchName(e.target.value);\n  };\n\n  const searchCocktailName = e => {\n    e.preventDefault();\n    const name = searchName;\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    axios.get(`${url}${name}`).then(response => {\n      console.log(response.data);\n      const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink));\n      setDrinks(allDrinks);\n      setFetchError(false);\n    }).catch(error => {\n      console.log(`Sorry, we couldn't find ${searchName}`);\n      setFetchError(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ButtonRandomCocktail, {\n        randomCocktail: randomCocktailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SearchIngredient, {\n        ingredientChange: handleIngredientChange,\n        submitIngredientSearch: searchIngredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SearchName, {\n        nameChange: handleNameChange,\n        submitNameSearch: searchCocktailName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(ErrorMsg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), drinks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: drinks.map(drink => /*#__PURE__*/_jsxDEV(DisplayCocktail, {\n          drink: drink,\n          searchCocktailName: searchCocktailName\n        }, drink.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"mZU1awWi5rAo7Aoiq+UipISP66E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/App.js"],"names":["axios","React","useEffect","useState","useContext","DisplayCocktail","ButtonRandomCocktail","SearchIngredient","SearchName","transformDrinkData","DrinksContext","Layout","BrowserRouter","Routes","Route","Link","ErrorMsg","App","drinks","setDrinks","searchIngredient","setSearchIngredient","searchName","setSearchName","fetchError","setFetchError","randomCocktailHandler","data","get","handleIngredientChange","e","target","value","searchIngredients","preventDefault","ingredient","url","then","response","allDrinks","map","drink","catch","error","console","log","handleNameChange","searchCocktailName","name","length","id"],"mappings":"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","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React, {useEffect, useState, useContext} from 'react';\nimport DisplayCocktail from \"./components/DisplayCocktail\";\nimport ButtonRandomCocktail from \"./components/ButtonRandomCocktail\";\nimport SearchIngredient from \"./components/SearchIngredient\";\nimport SearchName from \"./components/SearchName\";\nimport transformDrinkData from \"./adaptors/getDrinks\";\nimport {DrinksContext} from \"./state/DrinksContext\";\nimport Layout from \"./components/Layout\";\nimport { BrowserRouter, Routes, Route, Link} from \"react-router-dom\";\nimport ErrorMsg from \"./components/ErrorMsg\";\n\n\n\nconst App = () => {\n\n    // STATE FOR COCKTAIL\n    const {drinks, setDrinks} = useContext(DrinksContext)\n    // STATE FOR COCKTAIL INGREDIENT SEARCH\n    const [searchIngredient, setSearchIngredient] = useState('')\n    // STATE FOR COCKTAIL NAME SEARCH\n    const [searchName, setSearchName] = useState('')\n    // ERROR IN FETCH STATE\n    const [fetchError, setFetchError] = useState(null)\n\n\n    const randomCocktailHandler = async () => {\n        const {data} = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n        setDrinks([transformDrinkData(data['drinks'][0])])\n    }\n\n\n    // SEARCH BY INGREDIENTS\n    const handleIngredientChange = (e) => {\n        setSearchIngredient(e.target.value)\n    }\n\n\n    const searchIngredients = (e) => {\n        e.preventDefault()\n        const ingredient = searchIngredient;\n        const url = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i='\n\n\n        axios\n            .get(`${url}${ingredient}`)\n            .then(response => {\n                const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\n                setDrinks(allDrinks)\n                setFetchError(false)\n            }).catch(error => {\n            console.log(`Sorry, no cocktails containing ${ingredient} were found`)\n            setFetchError(true)\n\n        })\n    }\n\n\n    // SEARCH BY COCKTAIL NAME\n    const handleNameChange = (e) => {\n        setSearchName(e.target.value)\n    }\n\n    const searchCocktailName = (e) => {\n        e.preventDefault()\n        const name = searchName\n        const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\n\n        axios\n            .get(`${url}${name}`)\n            .then(response => {\n                console.log(response.data)\n                const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\n                setDrinks(allDrinks)\n                setFetchError(false)\n            }).catch(error => {\n            console.log(`Sorry, we couldn't find ${searchName}`)\n            setFetchError(true)\n\n        })\n    }\n\n    return (\n        <Layout>\n        <div>\n            <ButtonRandomCocktail randomCocktail={randomCocktailHandler}/>\n            <SearchIngredient ingredientChange={handleIngredientChange} submitIngredientSearch={searchIngredients}/>\n            <SearchName nameChange={handleNameChange} submitNameSearch={searchCocktailName}/>\n            {/*<Link to='/favourites'>Go to Favourites</Link>*/}\n\n\n\n            {\n                fetchError && (\n                    <ErrorMsg/>\n                )\n            }\n            {\n                drinks.length > 0 && (\n                    <div>\n                        {\n                            drinks.map(drink =>\n                                <DisplayCocktail\n                                    drink={drink}\n                                    key={drink.id}\n                                    searchCocktailName={searchCocktailName}\n                                />)\n                        }\n                    </div>\n                )\n            }\n        </div>\n        </Layout>\n    )\n}\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}
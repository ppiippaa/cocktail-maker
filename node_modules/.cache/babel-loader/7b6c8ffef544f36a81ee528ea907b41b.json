{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from \"redux\"; // STORE --> globalises state\n// ACTION --> what you want to do e.g. add to favourites\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addToFavourites = () => {\n  return {\n    type: 'addToFaves'\n  };\n}; // REDUCER --> how actions transform state into next state\n// takes state and action as params, switch statement for all actions\n// e.g. check action and modifies store\n// DISPATCH --> the way we execute action\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/index.js"],"names":["React","ReactDOM","App","createStore","addToFavourites","type","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,WAAT,QAA2B,OAA3B,C,CAGA;AAGA;;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC1B,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD,C,CAOA;AACA;AAEA;AAGA;;;AAEAJ,QAAQ,CAACK,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore} from \"redux\";\n\n\n// STORE --> globalises state\n\n\n// ACTION --> what you want to do e.g. add to favourites\nconst addToFavourites = () => {\n    return {\n        type: 'addToFaves'\n    }\n}\n\n\n// REDUCER --> how actions transform state into next state\n// takes state and action as params, switch statement for all actions\n\n// e.g. check action and modifies store\n\n\n// DISPATCH --> the way we execute action\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}
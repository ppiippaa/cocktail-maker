{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _asyncToGenerator from\"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useContext,useState,useEffect}from'react';import Favourite from'../media/isFavouriteHeart.png';import NotFavourite from'../media/isNotFavouriteHeart.png';import axios from\"axios\";import transformDrinkData from\"../utils/adaptors/getDrinks\";import{addToLocalStorage,getFromLocalStorage}from\"../utils/helpers/localStorage\";import{FavouriteDrinksContext}from\"../state/FavouriteDrinksContext\";import{StyledDisplayCocktail}from\"./styles/DisplayCocktail.styled\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DisplayCocktail=function DisplayCocktail(props){var drink=props.drink;var name=drink.name,url=drink.url,method=drink.method,ingredients=drink.ingredients;var _useContext=useContext(FavouriteDrinksContext),favourites=_useContext.favourites,setFavourites=_useContext.setFavourites;var _useState=useState(ingredients),_useState2=_slicedToArray(_useState,2),ingredientsToDisplay=_useState2[0],setIngredientsToDisplay=_useState2[1];var _useState3=useState(method),_useState4=_slicedToArray(_useState3,2),methodToDisplay=_useState4[0],setMethodToDisplay=_useState4[1];useEffect(function(){var fetchExtraData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url='https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';axios.get(\"\".concat(url).concat(name)).then(function(response){console.log(response.data);var allDrinks=response.data['drinks'].map(function(drink){return transformDrinkData(drink);});setIngredientsToDisplay(allDrinks[0].ingredients);setMethodToDisplay(allDrinks[0].method);}).catch(function(error){console.log(\"Sorry, we couldn't find \".concat(name));// return error comp?\n});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchExtraData(){return _ref.apply(this,arguments);};}();if(!methodToDisplay&&!ingredientsToDisplay.length){fetchExtraData();}},[]);var toggleFavourite=function toggleFavourite(remove){if(remove){var filteredDrinks=favourites.filter(function(drink){return drink.name!==name;});setFavourites(filteredDrinks);addToLocalStorage(filteredDrinks);}else{setFavourites([].concat(_toConsumableArray(favourites),[drink]));addToLocalStorage([].concat(_toConsumableArray(favourites),[drink]));}};var isFavouriteDrink=function isFavouriteDrink(){var _getFromLocalStorage;return favourites.find(function(f){return f.name===name;})||((_getFromLocalStorage=getFromLocalStorage())===null||_getFromLocalStorage===void 0?void 0:_getFromLocalStorage.find(function(f){return f.name===name;}));};return/*#__PURE__*/_jsxs(StyledDisplayCocktail,{children:[/*#__PURE__*/_jsx(\"h3\",{children:name}),/*#__PURE__*/_jsx(\"img\",{className:\"drink-img\",src:\"\".concat(url,\"/preview\"),alt:name}),/*#__PURE__*/_jsx(\"ul\",{children:ingredientsToDisplay.map(function(ingredient){return/*#__PURE__*/_jsx(\"li\",{children:ingredient},ingredient);})}),/*#__PURE__*/_jsx(\"p\",{children:methodToDisplay}),/*#__PURE__*/_jsx(\"img\",{className:\"like-img\",src:isFavouriteDrink()?Favourite:NotFavourite,alt:isFavouriteDrink?'Icon Drink Favourited':'Icon Add to FavouriteDrinks',height:\"50px\",onClick:function onClick(){return toggleFavourite(isFavouriteDrink());}})]});};export default DisplayCocktail;","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/components/DisplayCocktail.js"],"names":["React","useContext","useState","useEffect","Favourite","NotFavourite","axios","transformDrinkData","addToLocalStorage","getFromLocalStorage","FavouriteDrinksContext","StyledDisplayCocktail","DisplayCocktail","props","drink","name","url","method","ingredients","favourites","setFavourites","ingredientsToDisplay","setIngredientsToDisplay","methodToDisplay","setMethodToDisplay","fetchExtraData","get","then","response","console","log","data","allDrinks","map","catch","error","length","toggleFavourite","remove","filteredDrinks","filter","isFavouriteDrink","find","f","ingredient"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport Favourite from '../media/isFavouriteHeart.png'\nimport NotFavourite from '../media/isNotFavouriteHeart.png'\nimport axios from \"axios\";\nimport transformDrinkData from \"../utils/adaptors/getDrinks\";\nimport {addToLocalStorage, getFromLocalStorage} from \"../utils/helpers/localStorage\";\nimport {FavouriteDrinksContext} from \"../state/FavouriteDrinksContext\";\nimport {StyledDisplayCocktail} from \"./styles/DisplayCocktail.styled\";\n\n\nconst DisplayCocktail = (props) => {\n    const drink = props.drink\n    const { name, url, method, ingredients } = drink\n\n    const {favourites, setFavourites} = useContext(FavouriteDrinksContext)\n\n    const [ingredientsToDisplay, setIngredientsToDisplay] = useState(ingredients)\n\n    const [methodToDisplay, setMethodToDisplay] = useState(method)\n\n    useEffect(() => {\n        const fetchExtraData = async () => {\n            const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\n\n            axios\n                .get(`${url}${name}`)\n                .then(response => {\n                    console.log(response.data)\n                    const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\n                    setIngredientsToDisplay(allDrinks[0].ingredients)\n                    setMethodToDisplay(allDrinks[0].method)\n                }).catch(error => {\n                console.log(`Sorry, we couldn't find ${name}`)\n                // return error comp?\n            })\n        }\n        if (!methodToDisplay && !ingredientsToDisplay.length) {\n           fetchExtraData()\n        }\n    }, [])\n\n\n\n    const toggleFavourite = (remove) => {\n        if (remove) {\n            const filteredDrinks = favourites.filter(drink => drink.name !== name)\n            setFavourites(filteredDrinks)\n            addToLocalStorage(filteredDrinks)\n        } else {\n           setFavourites([...favourites, drink])\n            addToLocalStorage([...favourites, drink])\n        }\n    }\n\n    const isFavouriteDrink = () => {\n        return favourites.find(f => f.name === name) || getFromLocalStorage()?.find(f => f.name === name)\n    }\n\n\n            return (\n                <StyledDisplayCocktail>\n                    <h3>{name}</h3>\n                    <img className='drink-img' src={`${url}/preview`} alt={name}/>\n                    <ul>\n                        {\n                            ingredientsToDisplay.map(ingredient => <li key={ingredient}>{ingredient}</li>)\n                        }\n                    </ul>\n                    <p>{methodToDisplay}</p>\n                    <img className='like-img' src={isFavouriteDrink() ? Favourite : NotFavourite} alt={isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to FavouriteDrinks'}\n                         height='50px' onClick={() => toggleFavourite(isFavouriteDrink())}/>\n                </StyledDisplayCocktail>\n            )\n    }\n\n\nexport default DisplayCocktail;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from 'axios';\nimport React, { useEffect, useState, useContext } from 'react';\nimport DisplayCocktail from \"./components/DisplayCocktail\";\nimport ButtonRandomCocktail from \"./components/ButtonRandomCocktail\";\nimport SearchIngredient from \"./components/SearchIngredient\";\nimport SearchName from \"./components/SearchName\";\nimport transformDrinkData from \"./adaptors/getDrinks\";\nimport { DrinksContext } from \"./state/DrinksContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // STATE FOR COCKTAIL\n  const {\n    drinks,\n    setDrinks\n  } = useContext(DrinksContext); // STATE FOR COCKTAIL INGREDIENT SEARCH\n\n  const [searchIngredient, setSearchIngredient] = useState(''); // STATE FOR COCKTAIL NAME SEARCH\n\n  const [searchName, setSearchName] = useState(''); // STATE FOR LOG IN\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const randomCocktailHandler = async () => {\n    const {\n      data\n    } = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n    setDrinks([transformDrinkData(data['drinks'][0])]);\n  }; // SEARCH BY INGREDIENTS\n\n\n  const handleIngredientChange = e => {\n    setSearchIngredient(e.target.value);\n  };\n\n  const searchIngredients = e => {\n    e.preventDefault();\n    const ingredient = searchIngredient;\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\n    console.log(`${url}${ingredient}`);\n    axios.get(`${url}${ingredient}`).then(response => {\n      console.log(response.data);\n    });\n  }; // SEARCH BY COCKTAIL NAME\n\n\n  const handleNameChange = e => {\n    setSearchName(e.target.value);\n  };\n\n  const searchCocktailName = e => {\n    e.preventDefault();\n    const name = searchName;\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    axios.get(`${url}${name}`).then(response => {\n      const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink));\n      setDrinks(allDrinks);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ButtonRandomCocktail, {\n      randomCocktail: randomCocktailHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchIngredient, {\n      ingredientChange: handleIngredientChange,\n      submitIngredientSearch: searchIngredients\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchName, {\n      nameChange: handleNameChange,\n      submitNameSearch: searchCocktailName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), drinks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ButtonRandomCocktail, {\n        randomCocktail: randomCocktailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), drinks.map(drink => /*#__PURE__*/_jsxDEV(DisplayCocktail, {\n        drink: drink,\n        addToFavourites: setFavouriteDrinks\n      }, drink.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"QUlEc6x0UBeEVt8V+ln38MbhDS4=\");\n\n_c = App;\nexport default App;\n/*\n* ROUTES\n* main route: render cocktails, search bars and random cocktail button\n* favourites: if logged in, show list of favourite, if not logged in show log in page\n* login: log in to app page them redirect to home with state changed to log in\n*\n* */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/App.js"],"names":["axios","React","useEffect","useState","useContext","DisplayCocktail","ButtonRandomCocktail","SearchIngredient","SearchName","transformDrinkData","DrinksContext","App","drinks","setDrinks","searchIngredient","setSearchIngredient","searchName","setSearchName","isLoggedIn","setIsLoggedIn","randomCocktailHandler","data","get","handleIngredientChange","e","target","value","searchIngredients","preventDefault","ingredient","url","console","log","then","response","handleNameChange","searchCocktailName","name","allDrinks","map","drink","length","setFavouriteDrinks"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAAQC,aAAR,QAA4B,uBAA5B;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd;AACA,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBT,UAAU,CAACM,aAAD,CAAtC,CAHc,CAKd;;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD,CANc,CAQd;;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C,CATc,CAYd;;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMiB,qBAAqB,GAAG,YAAY;AACtC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMrB,KAAK,CAACsB,GAAN,CAAU,wDAAV,CAArB;AACAT,IAAAA,SAAS,CAAC,CAACJ,kBAAkB,CAACY,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,CAAD,CAAnB,CAAD,CAAT;AACH,GAHD,CAfc,CAqBd;;;AACA,QAAME,sBAAsB,GAAIC,CAAD,IAAO;AAClCT,IAAAA,mBAAmB,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACH,GAFD;;AAKA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,UAAU,GAAGf,gBAAnB;AACA,UAAMgB,GAAG,GAAG,2DAAZ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,GAAI,GAAED,UAAW,EAAhC;AAEA7B,IAAAA,KAAK,CACAsB,GADL,CACU,GAAEQ,GAAI,GAAED,UAAW,EAD7B,EAEKI,IAFL,CAEUC,QAAQ,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACb,IAArB;AACH,KAJL;AAKH,GAZD,CA3Bc,CA0Cd;;;AACA,QAAMc,gBAAgB,GAAIX,CAAD,IAAO;AAC5BP,IAAAA,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAKA,QAAMU,kBAAkB,GAAIZ,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMS,IAAI,GAAGrB,UAAb;AACA,UAAMc,GAAG,GAAG,2DAAZ;AAEA9B,IAAAA,KAAK,CACAsB,GADL,CACU,GAAEQ,GAAI,GAAEO,IAAK,EADvB,EAEKJ,IAFL,CAEUC,QAAQ,IAAI;AAEd,YAAMI,SAAS,GAAGJ,QAAQ,CAACb,IAAT,CAAc,QAAd,EAAwBkB,GAAxB,CAA4BC,KAAK,IAAI/B,kBAAkB,CAAC+B,KAAD,CAAvD,CAAlB;AAEA3B,MAAAA,SAAS,CAACyB,SAAD,CAAT;AACH,KAPL;AAQH,GAbD;;AAgBA,sBACI;AAAA,4BACI,QAAC,oBAAD;AAAsB,MAAA,cAAc,EAAElB;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,gBAAD;AAAkB,MAAA,gBAAgB,EAAEG,sBAApC;AAA4D,MAAA,sBAAsB,EAAEI;AAApF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEQ,gBAAxB;AAA0C,MAAA,gBAAgB,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA,YAHJ,EAKQxB,MAAM,CAAC6B,MAAP,GAAgB,CAAhB,iBACI;AAAA,8BACI,QAAC,oBAAD;AAAsB,QAAA,cAAc,EAAErB;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQR,MAAM,CAAC2B,GAAP,CAAWC,KAAK,iBACZ,QAAC,eAAD;AACI,QAAA,KAAK,EAAEA,KADX;AAGI,QAAA,eAAe,EAAEE;AAHrB,SAESF,KAAK,CAACH,IAFf;AAAA;AAAA;AAAA;AAAA,cADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvFD;;GAAM1B,G;;KAAAA,G;AAyFN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React, {useEffect, useState, useContext} from 'react';\nimport DisplayCocktail from \"./components/DisplayCocktail\";\nimport ButtonRandomCocktail from \"./components/ButtonRandomCocktail\";\nimport SearchIngredient from \"./components/SearchIngredient\";\nimport SearchName from \"./components/SearchName\";\nimport transformDrinkData from \"./adaptors/getDrinks\";\nimport {DrinksContext} from \"./state/DrinksContext\";\n\n\n\nconst App = () => {\n\n    // STATE FOR COCKTAIL\n    const {drinks, setDrinks} = useContext(DrinksContext)\n\n    // STATE FOR COCKTAIL INGREDIENT SEARCH\n    const [searchIngredient, setSearchIngredient] = useState('')\n\n    // STATE FOR COCKTAIL NAME SEARCH\n    const [searchName, setSearchName] = useState('')\n\n\n    // STATE FOR LOG IN\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const randomCocktailHandler = async () => {\n        const {data} = await axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n        setDrinks([transformDrinkData(data['drinks'][0])])\n    }\n\n\n    // SEARCH BY INGREDIENTS\n    const handleIngredientChange = (e) => {\n        setSearchIngredient(e.target.value)\n    }\n\n\n    const searchIngredients = (e) => {\n        e.preventDefault()\n        const ingredient = searchIngredient;\n        const url = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i='\n\n        console.log(`${url}${ingredient}`)\n\n        axios\n            .get(`${url}${ingredient}`)\n            .then(response => {\n                console.log(response.data)\n            })\n    }\n\n\n    // SEARCH BY COCKTAIL NAME\n    const handleNameChange = (e) => {\n        setSearchName(e.target.value)\n    }\n\n\n    const searchCocktailName = (e) => {\n        e.preventDefault()\n        const name = searchName\n        const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\n\n        axios\n            .get(`${url}${name}`)\n            .then(response => {\n\n                const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\n\n                setDrinks(allDrinks)\n            })\n    }\n\n\n    return (\n        <div>\n            <ButtonRandomCocktail randomCocktail={randomCocktailHandler}/>\n            <SearchIngredient ingredientChange={handleIngredientChange} submitIngredientSearch={searchIngredients}/>\n            <SearchName nameChange={handleNameChange} submitNameSearch={searchCocktailName}/>\n            {\n                drinks.length > 0 && (\n                    <div>\n                        <ButtonRandomCocktail randomCocktail={randomCocktailHandler}/>\n                        {\n                            drinks.map(drink =>\n                                <DisplayCocktail\n                                    drink={drink}\n                                    key={drink.name}\n                                    addToFavourites={setFavouriteDrinks}\n                                />\n                            )\n                        }\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default App;\n\n/*\n* ROUTES\n* main route: render cocktails, search bars and random cocktail button\n* favourites: if logged in, show list of favourite, if not logged in show log in page\n* login: log in to app page them redirect to home with state changed to log in\n*\n* */"]},"metadata":{},"sourceType":"module"}
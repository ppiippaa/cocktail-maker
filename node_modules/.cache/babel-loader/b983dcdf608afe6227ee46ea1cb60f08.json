{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\src\\\\components\\\\DisplayCocktail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Favourite from '../media/isFavouriteHeart.png';\nimport NotFavourite from '../media/isNotFavouriteHeart.png';\nimport { DrinksContext } from \"../state/DrinksContext\";\nimport axios from \"axios\";\nimport transformDrinkData from \"../adaptors/getDrinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayCocktail = _ref => {\n  _s();\n\n  let {\n    drink: {\n      name,\n      url,\n      method,\n      ingredients,\n      isFavouriteDrink\n    }\n  } = _ref;\n  const {\n    drinks,\n    setDrinks\n  } = useContext(DrinksContext);\n  const [ingredientsToDisplay, setIngredientsToDisplay] = useState([]);\n\n  const toggleFavourite = () => {\n    const newDrinks = drinks.map(drink => {\n      if (drink.name === name) {\n        return { ...drink,\n          isFavouriteDrink: !isFavouriteDrink\n        };\n      }\n\n      return drink;\n    });\n    setDrinks(newDrinks);\n  };\n\n  const showIngredients = () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    axios.get(`${url}${name}`).then(response => {\n      console.log(response.data);\n      const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink));\n      setIngredientsToDisplay(allDrinks[0].ingredients);\n    }).catch(error => {\n      console.log(`Sorry, we couldn't find ${name}`);\n    });\n  };\n\n  if (ingredients.length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${url}/preview`,\n        alt: \"Image of Cocktail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, ingredient, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: method\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isFavouriteDrink ? Favourite : NotFavourite,\n        alt: isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to Favourites',\n        height: \"50px\",\n        onClick: toggleFavourite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${url}/preview`,\n        alt: \"Image of Cocktail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showIngredients,\n        children: \"Show me the details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredientsToDisplay.map(ingredient => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, ingredient, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 68\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isFavouriteDrink ? Favourite : NotFavourite,\n        alt: isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to Favourites',\n        height: \"50px\",\n        onClick: toggleFavourite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(DisplayCocktail, \"S2FcVgqNPO9wd4YdRYSPpVnSoOM=\");\n\n_c = DisplayCocktail;\nexport default DisplayCocktail;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayCocktail\");","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/components/DisplayCocktail.js"],"names":["React","useContext","useState","Favourite","NotFavourite","DrinksContext","axios","transformDrinkData","DisplayCocktail","drink","name","url","method","ingredients","isFavouriteDrink","drinks","setDrinks","ingredientsToDisplay","setIngredientsToDisplay","toggleFavourite","newDrinks","map","showIngredients","get","then","response","console","log","data","allDrinks","catch","error","length","ingredient"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport Favourite from '../media/isFavouriteHeart.png'\nimport NotFavourite from '../media/isNotFavouriteHeart.png'\nimport {DrinksContext} from \"../state/DrinksContext\"\nimport axios from \"axios\";\nimport transformDrinkData from \"../adaptors/getDrinks\";\n\n\n\nconst DisplayCocktail = ({drink: {name, url, method, ingredients, isFavouriteDrink}}) => {\n\n    const {drinks, setDrinks} = useContext(DrinksContext)\n\n    const [ingredientsToDisplay, setIngredientsToDisplay] = useState([])\n\n    const toggleFavourite = () => {\n        const newDrinks = drinks.map(drink => {\n            if (drink.name === name) {\n                return {...drink, isFavouriteDrink: !isFavouriteDrink}\n            }\n            return drink\n        } )\n        setDrinks(newDrinks)\n    }\n\n    const showIngredients = () => {\n        const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\n\n        axios\n            .get(`${url}${name}`)\n            .then(response => {\n                console.log(response.data)\n                const allDrinks = response.data['drinks'].map(drink => transformDrinkData(drink))\n                setIngredientsToDisplay(allDrinks[0].ingredients)\n            }).catch(error => {\n            console.log(`Sorry, we couldn't find ${name}`)\n        })\n    }\n\n        if (ingredients.length) {\n            return (\n                <>\n                    <h3>{name}</h3>\n                    <img src={`${url}/preview`} alt=\"Image of Cocktail\"/>\n                    <ul>\n                        {\n                            ingredients.map(ingredient => <li key={ingredient}>{ingredient}</li>)\n                        }\n                    </ul>\n                    <p>{method}</p>\n                    <img src={isFavouriteDrink ? Favourite : NotFavourite} alt={isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to Favourites'} height='50px' onClick={toggleFavourite}/>\n                </>\n            )\n        } else {\n            return (\n                <>\n                    <h3>{name}</h3>\n                    <img src={`${url}/preview`} alt=\"Image of Cocktail\"/>\n                    <button onClick={showIngredients}>Show me the details</button>\n                    <ul>\n                        {\n                            ingredientsToDisplay.map(ingredient => <li key={ingredient}>{ingredient}</li>)\n                        }\n                    </ul>\n                    <img src={isFavouriteDrink ? Favourite : NotFavourite} alt={isFavouriteDrink ? 'Icon Drink Favourited' : 'Icon Add to Favourites'} height='50px' onClick={toggleFavourite}/>\n                </>\n            )\n        }\n\n    }\n\n\nexport default DisplayCocktail;"]},"metadata":{},"sourceType":"module"}
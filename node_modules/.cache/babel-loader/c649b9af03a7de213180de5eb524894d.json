{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\pippa\\\\portfolio-projects\\\\cocktails\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";var transformDrinkData=function transformDrinkData(drink){var name=drink['strDrink'];var url=drink['strDrinkThumb'];var method=drink['strInstructions']||'';var id=drink['idDrink'];var ingredients=Object.entries(drink).filter(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return key.includes('strIngredient')&&value&&(value===null||value===void 0?void 0:value.length);}).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];return value;});return{name:name,url:url,method:method,ingredients:ingredients,id:id};};export default transformDrinkData;","map":{"version":3,"sources":["C:/Users/pippa/portfolio-projects/cocktails/src/utils/adaptors/getDrinks.js"],"names":["transformDrinkData","drink","name","url","method","id","ingredients","Object","entries","filter","key","value","includes","length","map"],"mappings":"2IAAA,GAAMA,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CAElC,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAAC,UAAD,CAAlB,CAEA,GAAME,CAAAA,GAAG,CAAGF,KAAK,CAAC,eAAD,CAAjB,CAEA,GAAMG,CAAAA,MAAM,CAAGH,KAAK,CAAC,iBAAD,CAAL,EAA4B,EAA3C,CAEA,GAAMI,CAAAA,EAAE,CAAGJ,KAAK,CAAC,SAAD,CAAhB,CAGA,GAAMK,CAAAA,WAAW,CAAIC,MAAM,CAACC,OAAP,CAAeP,KAAf,EAChBQ,MADgB,CACT,gDAAEC,GAAF,UAAOC,KAAP,gBAAkBD,CAAAA,GAAG,CAACE,QAAJ,CAAa,eAAb,GAAiCD,KAAjC,GAA0CA,KAA1C,SAA0CA,KAA1C,iBAA0CA,KAAK,CAAEE,MAAjD,CAAlB,EADS,EAEhBC,GAFgB,CAEZ,kDAAGJ,GAAH,UAAQC,KAAR,gBAAmBA,CAAAA,KAAnB,EAFY,CAArB,CAKA,MAAO,CAACT,IAAI,CAAJA,IAAD,CAAOC,GAAG,CAAHA,GAAP,CAAYC,MAAM,CAANA,MAAZ,CAAoBE,WAAW,CAAXA,WAApB,CAAiCD,EAAE,CAAFA,EAAjC,CAAP,CAEH,CAlBD,CAoBA,cAAeL,CAAAA,kBAAf","sourcesContent":["const transformDrinkData = (drink) => {\r\n\r\n    const name = drink['strDrink']\r\n\r\n    const url = drink['strDrinkThumb']\r\n\r\n    const method = drink['strInstructions'] || ''\r\n\r\n    const id = drink['idDrink']\r\n\r\n\r\n    const ingredients =  Object.entries(drink)\r\n        .filter(([key, value]) => key.includes('strIngredient') && value && value?.length)\r\n        .map(([ key, value]) => value)\r\n\r\n\r\n    return {name, url, method, ingredients, id}\r\n\r\n}\r\n\r\nexport default transformDrinkData\r\n\r\n"]},"metadata":{},"sourceType":"module"}